{"version":3,"sources":["webpack:///src/common/uploads/formatted-file-size.pipe.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.component.ts","webpack:///src/common/shared/billing/guards/billing-enabled-guard.service.ts","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///src/common/billing/subscriptions/subscription-stepper-state.service.ts","webpack:///src/common/billing/subscriptions/paypal-subscriptions.ts","webpack:///src/common/billing/upgrade-page/upgrade-page.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page.component.ts","webpack:///src/common/billing/upgrade-page/billing-plans-resolver.service.ts","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.html","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.ts","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.html","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.ts","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.ts","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.html","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.ts","webpack:///src/common/billing/credit-card-form/credit-card-form.component.html","webpack:///src/common/billing/credit-card-form/credit-card-form.component.ts","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.html","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.ts","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.html","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.ts","webpack:///src/common/billing/guards/user-subscribed-guard.service.ts","webpack:///src/common/billing/upgrade-page/currencies-list-resolver.service.ts","webpack:///src/common/billing/invoices/invoice.service.ts","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.html","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.ts","webpack:///src/common/billing/guards/redirect-to-upgrade-page.service.ts","webpack:///src/common/billing/billing-routing.module.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.ts","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.html","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.ts","webpack:///src/common/billing/guards/user-not-subscribed-guard.service.ts","webpack:///src/common/billing/billing.module.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///src/common/shared/billing/plans.service.ts","webpack:///src/common/core/services/local-storage.service.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.module.ts","webpack:///src/common/shared/billing/subscriptions.service.ts"],"names":["FormattedFileSizePipe","precision","bytes","isNaN","parseFloat","String","isFinite","FullPlanNameComponent","i18n","this","plan","name","parent","t","BillingEnabledGuard","settings","router","route","state","handle","get","navigate","CdkStep_ng_template_0_Template","rf","ctx","CdkStepLabel","CdkStepHeader","CdkStepperModule","CdkStepperPrevious","CdkStepperNext","CdkStepper","CdkStep","_c0","_elementRef","nativeElement","focus","ɵfac","ɵdir","type","selectors","hostAttrs","template","nextId","STEPPER_GLOBAL_OPTIONS","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","stepControl","valid","invalid","selected","reset","_stateChanged","value","c","_getDefaultCompleted","_getDefaultError","ɵcmp","contentQueries","dirIndex","_t","stepLabel","first","viewQuery","content","inputs","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","exportAs","features","ngContentSelectors","decls","vars","encapsulation","changeDetection","_dir","_changeDetectorRef","_document","_destroyed","Subject","_linear","_selectedIndex","selectionChange","_orientation","_groupId","_keyManager","_stepHeader","withWrap","withVerticalOrientation","of","pipe","startWith","_layoutDirection","takeUntil","subscribe","direction","withHorizontalOrientation","updateActiveItem","steps","changes","Math","max","next","complete","selectedIndex","min","length","_updateSelectedItemIndex","forEach","step","i","markForCheck","index","position","toArray","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","newIndex","stepsArray","emit","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","event","hasModifier","keyCode","manager","setFirstItemActive","preventDefault","setLastItemActive","onKeydown","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","_steps","Error","_anyControlsInvalidOrPending","indexOf","linear","outputs","hostVars","hostBindings","_handleClick","previous","ɵmod","ɵinj","factory","imports","MatStepHeader_ng_container_3_Template","ctx_r0","iconOverrides","_getIconContext","MatStepHeader_ng_container_4_span_1_Template","ctx_r6","_getDefaultTextForState","MatStepHeader_ng_container_4_mat_icon_2_Template","ctx_r7","MatStepHeader_ng_container_4_Template","ctx_r1","MatStepHeader_ng_container_6_Template","ctx_r2","_templateLabel","MatStepHeader_div_7_Template","ctx_r3","MatStepHeader_div_8_Template","ctx_r4","_intl","optionalLabel","MatStepHeader_div_9_Template","ctx_r5","MatStep_ng_template_0_Template","MatHorizontalStepper_ng_container_1_div_2_Template","MatHorizontalStepper_ng_container_1_Template","_r8","$implicit","select","$event","_onKeydown","step_r2","i_r3","isLast_r4","last","_getFocusIndex","_getStepLabelId","_getIndicatorType","_iconOverrides","disableRipple","_getStepContentId","MatHorizontalStepper_div_3_Template","_r12","_animationDone","step_r9","i_r10","_getAnimationDirection","MatVerticalStepper_div_0_Template","_r6","step_r1","i_r2","isLast_r3","MatStepLabel","MatStepperIntl","MatStepHeader","MatStepper","MatStep","MatStepperIcon","MatHorizontalStepper","MatStepperNext","MatVerticalStepper","MatStepperPrevious","MatStepperModule","SubscriptionStepperState","PaypalSubscriptions","ɵMatStepLabel_BaseFactory","ɵprov","token","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","useFactory","parentIntl","_focusMonitor","changeDetectorRef","super","monitor","_intlSubscription","unsubscribe","stopMonitoring","focusVia","active","consts","_getHostElement","_stringLabel","directives","styles","matStepperAnimations","horizontalStepTransition","transform","visibility","verticalStepTransition","height","templateRef","stepper","_errorStateMatcher","form","isErrorState","useExisting","arguments","animationDone","_icons","distinctUntilChanged","x","y","fromState","toState","ɵMatStepper_BaseFactory","labelPosition","ɵMatHorizontalStepper_BaseFactory","data","animation","dir","elementRef","ɵMatStepperNext_BaseFactory","ɵMatStepperPrevious_BaseFactory","providers","currentUser","plans","initialPlan$","BehaviorSubject","selectedPlan$","mode","isSubscribed","children","getChildPlans","radioGroupModel","id","find","filter","parent_id","hidden","http","subscriptions","popupWidth","popupHeight","popupParams","menubar","location","locationbar","toolbar","titlebar","status","scrollbars","width","subscriptionPending","executingAgreement","params","popup","openPaypalPopup","getBaseUrl","Promise","resolve","reject","rejectSubscribe","resolveSubscribe","createPaypalAgreement","response","listenForMessages","plan_id","href","urls","approve","rejectSubscriptionPromise","subscription","cancel","delete","start_date","renews_at","then","user","planId","window","addEventListener","e","origin","executePaypalAgreement","finalize","resolveSubscriptionPromise","errorResponse","url","Object","assign","left","screen","top","newWindow","open","keys","map","key","join","interval","setInterval","closed","clearInterval","post","agreement_id","loading$","UpgradePageComponent","BillingPlansResolver","Steps","Plans","Period","Payment","toast","localStorage","paypalSubscriptions","setPlans","hydrateStateFromLocalStorage","storedState","initial","initialPlan","p","finalPlan","selectInitialPlan","selectPlanById","changePlan","set","final","remove","message","replacements","planName","getSelectedOrParentPlanName","activeSubscription","getSubscription","gateway","assignCurrent","selectedPlan","nextStep","all","order","perPage","pagination","catchError","navigateByUrl","mergeMap","AcceptedPaymentsHeaderComponent","el","acceptedCards","getJson","card","getAssetUrl","toLowerCase","PlanFeaturesListComponent","showCheckIcons","dense","UpgradePageAsideComponent","OrderSummaryComponent","CreditCardFormComponent","zone","lazyLoader","theme","created","submitButtonText","showSubmitButton","showOrderSummary","error$","stripeElements","resetForm","initStripe","destroyStripe","error","stripe","createToken","addCardToUser","stripeToken","addCard","err","messages","general","loadAsset","Stripe","elements","isDarkMode","selectedTheme$","is_dark","field","create","classes","base","style","color","mount","on","onChange","bind","push","unmount","destroy","change","run","submitForm","CreateSubscriptionPanelComponent","paypal","selectedIndex$","loading","submitText","disablePaypalTab","startLoading","createOnStripe","getNewSubscriptionPayload","completeSubscription","confirmCardPayment","stopLoading","payment_intent_secret","result","action","onAction","finalizeOnStripe","reference","finalResponse","payload","from","UserSubscriptionPageComponent","UserSubscribedGuard","CurrenciesListResolver","InvoiceService","modal","activeSubscription$","onGracePeriod","ends_at","split","title","body","ok","afterClosed","confirmed","cancelSubscription","resume","setSubscription","request","share","updateUserAndSubscription","valueLists","currencies","toPromise","InvoiceIndexComponent","PricingPageComponent","RedirectToUpgradePage","BillingRoutingModule","invoices","dataSource$","userId","invoice","uuid","routes","path","component","allowIfSubscriptionForced","canActivate","listener","isLoggedIn","canActivateChild","forChild","SelectPlanPanelComponent","hasRecommendedPlan","recommended","setTimeout","ContactWidgetComponent","UserNotSubscribedGuard","SelectPlanPeriodPanelComponent","BillingModule","showSidebar","amount","getPlanPerMonthAmount","ceil","interval_count","_c1","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","multi","MatRadioChange","source","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","checked","_radios","radio","_markForCheck","fn","isDisabled","disabled","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","MatRadioButton","required","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_animationMode","_providerOverride","_uniqueId","_checked","_removeUniqueSelectionListener","listen","options","_inputElement","focusOrigin","_touch","stopPropagation","groupValueChanged","_emitChangeEvent","newCheckedState","notify","_setDisabled","_color","ariaDescribedby","ɵMatRadioButton_BaseFactory","tabIndex","_onInputChange","_onInputClick","_r0","inputId","_isRippleDisabled","MatRadioModule","PLANS_BASE_URI","put","ids","LocalStorage","storage","localStorageAvailable","defaultValue","JSON","parse","getItem","stringify","setItem","removeItem","FullPlanNameModule","Subscriptions","newPlanId"],"mappings":"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","file":"x","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { prettyBytes } from '../core/utils/pretty-bytes';\n\n@Pipe({\n    name: 'formattedFileSize',\n    pure: true,\n})\nexport class FormattedFileSizePipe implements PipeTransform {\n    transform(bytes: number = 0, precision?: number|string): string {\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\n        return prettyBytes(bytes, precision);\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {Translations} from '@common/core/translations/translations.service';\nimport {ucFirst} from '@common/core/utils/uc-first';\n\n@Component({\n    selector: 'full-plan-name',\n    template: '{{getFullPlanName()}}',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FullPlanNameComponent {\n    @Input() plan: Plan;\n\n    constructor(private i18n: Translations) {}\n\n    public getFullPlanName(): string {\n        if ( ! this.plan) return;\n        let name = this.plan.parent ? this.plan.parent.name : this.plan.name;\n        name = ucFirst(this.i18n.t(name));\n        name += ' ' + this.i18n.t('Plan');\n        if (this.plan.parent) name += ': ' + this.plan.name;\n        return name;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BillingEnabledGuard implements CanActivate, CanActivateChild {\n    constructor(private settings: Settings, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if (this.settings.get('billing.integrated') && this.settings.get('billing.enable')) {\n            return true;\n        }\n\n        this.router.navigate(['/']);\n        return false;\n    }\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n/** @nocollapse */\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n/** @nocollapse */\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkStepLabel.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nclass StepperSelectionEvent {\n}\nif (false) {\n    /**\n     * Index of the step now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedIndex;\n    /**\n     * Index of the step previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedIndex;\n    /**\n     * The step instance now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedStep;\n    /**\n     * The step instance previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\nfunction StepperOptions() { }\nif (false) {\n    /**\n     * Whether the stepper should display an error state or not.\n     * Default behavior is assumed to be false.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.showError;\n    /**\n     * Whether the stepper should display the default indicator type\n     * or not.\n     * Default behavior is assumed to be true.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.displayDefaultIndicatorType;\n}\nclass CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} _stepper\n     * @param {?=} stepperOptions\n     */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /**\n     * Whether the user can return to this step once it has been marked as completed.\n     * @return {?}\n     */\n    get editable() {\n        return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    select() {\n        this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => CdkStepper))), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => CdkStepper)),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => CdkStepper))]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_completed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepperOptions;\n    /** @type {?} */\n    CdkStep.prototype._showError;\n    /** @type {?} */\n    CdkStep.prototype._displayDefaultIndicatorType;\n    /**\n     * Template for step label if it exists.\n     * @type {?}\n     */\n    CdkStep.prototype.stepLabel;\n    /**\n     * Template for step content.\n     * @type {?}\n     */\n    CdkStep.prototype.content;\n    /**\n     * The top level abstract control of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.stepControl;\n    /**\n     * Whether user has seen the expanded step content or not.\n     * @type {?}\n     */\n    CdkStep.prototype.interacted;\n    /**\n     * Plain text label of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    CdkStep.prototype.errorMessage;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabelledby;\n    /**\n     * State of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._editable;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._optional;\n    /** @type {?} */\n    CdkStep.prototype._completedOverride;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._customError;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepper;\n}\nclass CdkStepper {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     * @param {?=} _elementRef\n     * @param {?=} _document\n     */\n    constructor(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /**\n     * The list of step components that the stepper is holding.\n     * @return {?}\n     */\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n    get linear() {\n        return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set selectedIndex(index) {\n        /** @type {?} */\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? ((/** @type {?} */ (this._dir.change))) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} direction\n         * @return {?}\n         */\n        direction => this._keyManager.withHorizontalOrientation(direction)));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach((/**\n         * @param {?} step\n         * @return {?}\n         */\n        step => step.reset()));\n        this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    _getAnimationDirection(index) {\n        /** @type {?} */\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        /** @type {?} */\n        const step = this.steps.toArray()[index];\n        /** @type {?} */\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    _updateSelectedItemIndex(newIndex) {\n        /** @type {?} */\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _anyControlsInvalidOrPending(index) {\n        /** @type {?} */\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some((/**\n             * @param {?} step\n             * @return {?}\n             */\n            step => {\n                /** @type {?} */\n                const control = step.stepControl;\n                /** @type {?} */\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            }));\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        const stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n/** @nocollapse */\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_linear;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_selectedIndex;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._destroyed;\n    /**\n     * Used for managing keyboard focus.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._keyManager;\n    /**\n     * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n     * constructor param is required.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._document;\n    /**\n     * The list of step components that the stepper is holding.\n     * @deprecated use `steps` instead\n     * \\@breaking-change 9.0.0 remove this property\n     * @type {?}\n     */\n    CdkStepper.prototype._steps;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    CdkStepper.prototype._stepHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._linear;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._selectedIndex;\n    /**\n     * Event emitted when the selected step has changed.\n     * @type {?}\n     */\n    CdkStepper.prototype.selectionChange;\n    /**\n     * Used to track unique ID for each stepper component.\n     * @type {?}\n     */\n    CdkStepper.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._orientation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\nfunction AbstractControlLike() { }\nif (false) {\n    /** @type {?} */\n    AbstractControlLike.prototype.asyncValidator;\n    /** @type {?} */\n    AbstractControlLike.prototype.dirty;\n    /** @type {?} */\n    AbstractControlLike.prototype.disabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.enabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.errors;\n    /** @type {?} */\n    AbstractControlLike.prototype.invalid;\n    /** @type {?} */\n    AbstractControlLike.prototype.parent;\n    /** @type {?} */\n    AbstractControlLike.prototype.pending;\n    /** @type {?} */\n    AbstractControlLike.prototype.pristine;\n    /** @type {?} */\n    AbstractControlLike.prototype.root;\n    /** @type {?} */\n    AbstractControlLike.prototype.status;\n    /** @type {?} */\n    AbstractControlLike.prototype.statusChanges;\n    /** @type {?} */\n    AbstractControlLike.prototype.touched;\n    /** @type {?} */\n    AbstractControlLike.prototype.untouched;\n    /** @type {?} */\n    AbstractControlLike.prototype.updateOn;\n    /** @type {?} */\n    AbstractControlLike.prototype.valid;\n    /** @type {?} */\n    AbstractControlLike.prototype.validator;\n    /** @type {?} */\n    AbstractControlLike.prototype.value;\n    /** @type {?} */\n    AbstractControlLike.prototype.valueChanges;\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearAsyncValidators = function () { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearValidators = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.disable = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.enable = function (opts) { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.get = function (path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.getError = function (errorCode, path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.hasError = function (errorCode, path) { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAllAsTouched = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsDirty = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPending = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPristine = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsTouched = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsUntouched = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (value, options) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setAsyncValidators = function (newValidator) { };\n    /**\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setErrors = function (errors, opts) { };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setParent = function (parent) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValidators = function (newValidator) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.updateValueAndValidity = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (formState, options) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass CdkStepperNext {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     * @type {?}\n     */\n    CdkStepperNext.prototype.type;\n    /** @type {?} */\n    CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass CdkStepperPrevious {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     * @type {?}\n     */\n    CdkStepperPrevious.prototype.type;\n    /** @type {?} */\n    CdkStepperPrevious.prototype._stepper;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Stepper data that is required for internationalization.\n */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n/** @nocollapse */ MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.changes;\n    /**\n     * Label that is rendered below optional steps.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _elementRef\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        _focusMonitor.monitor(_elementRef, true);\n        this._intlSubscription = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._intlSubscription;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    MatStepHeader.prototype.errorMessage;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    MatStepHeader.prototype.iconOverrides;\n    /**\n     * Index of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.index;\n    /**\n     * Whether the given step is selected.\n     * @type {?}\n     */\n    MatStepHeader.prototype.selected;\n    /**\n     * Whether the given step label is active.\n     * @type {?}\n     */\n    MatStepHeader.prototype.active;\n    /**\n     * Whether the given step is optional.\n     * @type {?}\n     */\n    MatStepHeader.prototype.optional;\n    /**\n     * Whether the ripple should be disabled.\n     * @type {?}\n     */\n    MatStepHeader.prototype.disableRipple;\n    /** @type {?} */\n    MatStepHeader.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\nconst matStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\nfunction MatStepperIconContext() { }\nif (false) {\n    /**\n     * Index of the step.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.index;\n    /**\n     * Whether the step is currently active.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.active;\n    /**\n     * Whether the step is optional.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n/** @nocollapse */\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\nif (false) {\n    /**\n     * Name of the icon to be overridden.\n     * @type {?}\n     */\n    MatStepperIcon.prototype.name;\n    /** @type {?} */\n    MatStepperIcon.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStep extends CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     * @param {?=} stepperOptions\n     */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        /** @type {?} */\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatStepper))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatStepper)),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatStepper))]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nif (false) {\n    /**\n     * Content for step label given by `<ng-template matStepLabel>`.\n     * @type {?}\n     */\n    MatStep.prototype.stepLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStep.prototype._errorStateMatcher;\n}\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Event emitted when the current step is done transitioning in.\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n        /**\n         * Stream of animation `done` events when the body expands/collapses.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._icons.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ name, templateRef }) => this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._stateChanged();\n        }));\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => x.fromState === y.fromState && x.toState === y.toState)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (((/** @type {?} */ (event.toState))) === 'current') {\n                this.animationDone.emit();\n            }\n        }));\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nconst ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_hasError;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    MatStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    MatStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    MatStepper.prototype._icons;\n    /**\n     * Event emitted when the current step is done transitioning in.\n     * @type {?}\n     */\n    MatStepper.prototype.animationDone;\n    /**\n     * Whether ripples should be disabled for the step headers.\n     * @type {?}\n     */\n    MatStepper.prototype.disableRipple;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    MatStepper.prototype._iconOverrides;\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     * @type {?}\n     */\n    MatStepper.prototype._animationDone;\n}\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the label should display in bottom or end position.\n         */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nconst ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_hasError;\n    /**\n     * Whether the label should display in bottom or end position.\n     * @type {?}\n     */\n    MatHorizontalStepper.prototype.labelPosition;\n}\nclass MatVerticalStepper extends MatStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     * @param {?=} elementRef\n     * @param {?=} _document\n     */\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n/** @nocollapse */\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_hasError;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule,\n        MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import {Injectable} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {BehaviorSubject} from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SubscriptionStepperState {\n    public mode: 'pricing'|'subscribe'|'changePlan';\n\n    /**\n     * Stripe.js instance.\n     */\n    public stripe: stripe.Stripe;\n\n    /**\n     * All available plans.\n     */\n    public plans: Plan[] = [];\n\n    /**\n     * Model for plan period radio group.\n     */\n    public radioGroupModel: number;\n\n    /**\n     * Base plan, selected in the first step.\n     */\n    public initialPlan$ = new BehaviorSubject<Plan>(null);\n\n    /**\n     * Final billing plan user has selected (base or yearly alternative)\n     */\n    public selectedPlan$ = new BehaviorSubject<Plan>(null);\n\n    constructor(private currentUser: CurrentUser) {\n        this.mode = this.currentUser.isSubscribed() ? 'changePlan' : 'subscribe';\n    }\n\n    /**\n     * Select initial \"base\" plan.\n     */\n    public selectInitialPlan(plan: Plan) {\n        this.initialPlan$.next(plan);\n\n        const children = this.getChildPlans(plan);\n\n        if (children && children[0]) {\n            this.radioGroupModel = children[0].id;\n            this.selectedPlan$.next(children[0]);\n        } else {\n            this.selectedPlan$.next(plan);\n            this.radioGroupModel = plan.id;\n        }\n    }\n\n    /**\n     * Select plan by specified ID.\n     */\n    public selectPlanById(id: number) {\n        this.selectedPlan$.next(this.plans.find(plan => plan.id === id));\n    }\n\n    /**\n     * Get different versions of specified plan.\n     * (yearly, weekly, every 2 years etc)\n     */\n    public getChildPlans(parent: Plan) {\n        return this.plans.filter(plan => plan.parent_id === parent.id && !plan.hidden);\n    }\n\n    /**\n     * Set all available plans.\n     */\n    public setPlans(plans: Plan[]) {\n        this.plans = plans;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\nimport {Settings} from '../../core/config/settings.service';\nimport {User} from '../../core/types/models/User';\nimport { finalize } from 'rxjs/operators';\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\nimport { Subscription } from '../../shared/billing/models/subscription';\nimport {Plan} from '@common/core/types/models/Plan';\nimport { Translations } from '@common/core/translations/translations.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaypalSubscriptions {\n    private popupWidth = 450;\n    private popupHeight = 650;\n\n    /**\n     * Params for popup window.\n     */\n    private popupParams = {\n        menubar: 0,\n        location: 0,\n        locationbar: 0,\n        toolbar: 0,\n        titlebar: 0,\n        status: 0,\n        scrollbars: 1,\n        width: this.popupWidth,\n        height: this.popupHeight\n    };\n\n    // TODO: clean this up with rxjs or checkout.js\n    private resolveSubscribe: Function;\n    private rejectSubscribe: Function;\n    private subscriptionPending = false;\n    private executingAgreement = false;\n\n    constructor(\n        private http: AppHttpClient,\n        private settings: Settings,\n        private subscriptions: Subscriptions,\n        private i18n: Translations,\n    ) {}\n\n    /**\n     * Subscribe to specified plan on paypal.\n     */\n    public subscribe(params: {plan_id: number, start_date?: string}): Promise<User> {\n        this.subscriptionPending = true;\n\n        const popup = this.openPaypalPopup(this.settings.getBaseUrl(true) + 'billing/paypal/loading');\n\n        return new Promise((resolve, reject) => {\n            this.rejectSubscribe = reject;\n            this.resolveSubscribe = resolve;\n\n            this.createPaypalAgreement(params).subscribe(response => {\n                this.listenForMessages(params.plan_id);\n                popup.location.href = response.urls.approve;\n            }, () => this.rejectSubscriptionPromise());\n        });\n    }\n\n    /**\n     * Change plan of subscription to specified one.\n     */\n    public changePlan(subscription: Subscription, plan: Plan): Promise<User> {\n        return new Promise(resolve => {\n            this.subscriptions.cancel(subscription.id, {delete: true}).subscribe(() => {\n                this.subscribe({plan_id: plan.id, start_date: subscription.renews_at}).then(user => resolve(user));\n            });\n        });\n    }\n\n    /**\n     * Listen for messages from paypal window and execute paypal agreement.\n     */\n    private listenForMessages(planId: number) {\n        window.addEventListener('message', e => {\n            if (this.settings.getBaseUrl().indexOf(e.origin) === -1) return;\n\n            // user cancelled payment on paypal popup manually\n            if (e.data.status !== 'success') {\n                return this.rejectSubscriptionPromise();\n            }\n\n            // user approved payment\n            this.executingAgreement = true;\n            this.executePaypalAgreement(e.data.token, planId)\n                .pipe(finalize(() => this.executingAgreement = false))\n                .subscribe(\n                    response => this.resolveSubscriptionPromise(response.user),\n                    errorResponse => this.rejectSubscriptionPromise(),\n                );\n        }, false);\n    }\n\n    /**\n     * Open new paypal express popup window.\n     */\n    private openPaypalPopup(url: string) {\n        const params = Object.assign({}, this.popupParams, {\n            left: (screen.width / 2) - (this.popupWidth / 2),\n            top: (screen.height / 2) - (this.popupHeight / 2)\n        });\n\n        const newWindow = window.open(\n            url,\n            'PayPal',\n            Object.keys(params).map(key => key + '=' + params[key]).join(', '),\n        );\n\n        const interval = setInterval(() => {\n            if (newWindow == null || newWindow.closed) {\n                window.clearInterval(interval);\n\n                if (this.subscriptionPending && ! this.executingAgreement) {\n                    this.rejectSubscriptionPromise();\n                }\n            }\n        }, 1000);\n\n        return newWindow;\n    }\n\n    private createPaypalAgreement(params: {plan_id: number, start_date?: string}): Observable<{urls: {execute: string, approve: string}}> {\n        return this.http.post('billing/subscriptions/paypal/agreement/create', {plan_id: params.plan_id, start_date: params.start_date});\n    }\n\n    private executePaypalAgreement(agreement_id: string, plan_id: number): Observable<{user: User}> {\n        return this.http.post('billing/subscriptions/paypal/agreement/execute', {agreement_id, plan_id});\n    }\n\n    /**\n     * Reject subscription promise.\n     */\n    private rejectSubscriptionPromise() {\n        this.rejectSubscribe(this.i18n.t('Payment failed. Please try again later.'));\n        this.subscriptionPending = false;\n    }\n\n    /**\n     * Resolve subscription promise.\n     */\n    private resolveSubscriptionPromise(user: User) {\n        this.resolveSubscribe(user);\n        this.subscriptionPending = false;\n    }\n}\n","<material-navbar [hideRegisterButton]=\"state.mode === 'pricing'\"></material-navbar>\n\n<div class=\"bg-wrapper\">\n    <mat-horizontal-stepper class=\"container main-content\" [linear]=\"true\">\n        <ng-template matStepperIcon=\"edit\">\n            <mat-icon svgIcon=\"edit\" class=\"size-16\"></mat-icon>\n        </ng-template>\n\n        <mat-step [label]=\"'Subscription plan' | trans\" [completed]=\"!!(state.initialPlan$ | async)\">\n            <select-plan-panel (selected)=\"nextStep()\"></select-plan-panel>\n            <contact-widget></contact-widget>\n        </mat-step>\n\n        <mat-step [label]=\"'Subscription interval' | trans\" [completed]=\"!!(state.selectedPlan$ | async)\">\n            <select-plan-period-panel [showSidebar]=\"true\" (selected)=\"nextStep()\"></select-plan-period-panel>\n        </mat-step>\n\n        <mat-step [label]=\"'Payment' | trans\" [completed]=\"false\" *ngIf=\"state.mode === 'subscribe'\">\n            <div class=\"step-container payment-step\">\n                <div class=\"left-col\">\n                    <create-subscription-panel [plan]=\"state.selectedPlan$ | async\" (loading)=\"loading$.next($event)\" (completed)=\"onCompleted()\"></create-subscription-panel>\n                </div>\n\n                <upgrade-page-aside [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\n            </div>\n\n            <p\n                class=\"legal-info\" *ngIf=\"state.selectedPlan$ | async as plan\"\n                trans\n                [transValues]=\"{\n                    siteName: settings.get('branding.site_name'),\n                    intervalCount: plan.interval_count > 1 ? plan.interval_count : '',\n                    intervalName: plan.interval_count > 1 ? plan.interval + 's' : plan.interval\n                }\">\n                You authorise :siteName to charge you automatically every :intervalCount :intervalName, until you cancel your subscription. You consent to get access to your :siteName subscription immediately, and acknowledge that refunds are only available within 14 days and provided you haven't accessed :siteName. You will be able to cancel your subscription at any time from your profile page.\n            </p>\n        </mat-step>\n    </mat-horizontal-stepper>\n</div>\n\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatStepper } from '@angular/material/stepper';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SubscriptionStepperState } from '../subscriptions/subscription-stepper-state.service';\nimport { Settings } from '../../core/config/settings.service';\nimport { Toast } from '../../core/ui/toast.service';\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { finalize } from 'rxjs/operators';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { PaypalSubscriptions } from '@common/billing/subscriptions/paypal-subscriptions';\n\nexport interface CreditCard {\n    number?: number|string;\n    expiration_month?: number|string;\n    expiration_year?: number|string;\n    security_code?: number|string;\n}\n\nenum Steps {\n    Plans = 0,\n    Period = 1,\n    Payment = 2\n}\n\ninterface LocalStorageState {\n    initial?: number;\n    final?: number;\n}\n\nconst LOCAL_STORAGE_KEY = 'be.onboarding.selected';\n\n@Component({\n    selector: 'upgrade-page',\n    templateUrl: './upgrade-page.component.html',\n    styleUrls: ['./upgrade-page.component.scss'],\n    providers: [SubscriptionStepperState],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpgradePageComponent implements OnInit {\n    @ViewChild(MatStepper, { static: true }) stepper: MatStepper;\n    @Input() set mode(value: 'pricing'|'subscribe'|'changePlan') {\n        this.state.mode = value;\n    }\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private route: ActivatedRoute,\n        public settings: Settings,\n        private router: Router,\n        private toast: Toast,\n        public state: SubscriptionStepperState,\n        private localStorage: LocalStorage,\n        private currentUser: CurrentUser,\n        private paypalSubscriptions: PaypalSubscriptions,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe((data: {plans: Plan[]}) => {\n            this.state.setPlans(data.plans);\n            if (this.state.mode === 'subscribe') {\n               this.hydrateStateFromLocalStorage();\n            }\n        });\n    }\n\n    private hydrateStateFromLocalStorage() {\n        const storedState = this.localStorage.get(LOCAL_STORAGE_KEY) as LocalStorageState;\n        if (storedState && storedState.initial && storedState.final) {\n            const initialPlan = this.state.plans.find(p => p.id === storedState.initial),\n                finalPlan = this.state.plans.find(p => p.id === storedState.final);\n            if (initialPlan && finalPlan) {\n                this.state.selectInitialPlan(initialPlan);\n                this.state.selectPlanById(finalPlan.id);\n                this.stepper.selectedIndex = Steps.Payment;\n            }\n        }\n    }\n\n    public nextStep() {\n        if (this.state.mode === 'changePlan' && this.stepper.selectedIndex === Steps.Period) {\n            this.changePlan();\n        } else if (this.state.mode === 'pricing' && this.stepper.selectedIndex === Steps.Period) {\n            this.localStorage.set(LOCAL_STORAGE_KEY, {\n                initial: this.state.initialPlan$.value.id,\n                final: this.state.selectedPlan$.value.id\n            });\n            this.router.navigate(['register']);\n        } else {\n            this.stepper.next();\n        }\n    }\n\n    public onCompleted() {\n        this.loading$.next(false);\n        this.router.navigate(['/']);\n        this.localStorage.remove(LOCAL_STORAGE_KEY);\n        this.toast.open({\n            message: 'Subscribed to \":planName\" plan successfully.',\n            replacements: {planName: this.getSelectedOrParentPlanName()},\n        });\n    }\n\n    /**\n     * Change user's active subscription plan to specified one.\n     */\n    public changePlan() {\n        const plan = this.state.selectedPlan$.value,\n            activeSubscription = this.currentUser.getSubscription();\n        // user already subscribed\n        if (this.currentUser.getSubscription({planId: plan.id})) {\n            return;\n        }\n        this.loading$.next(true);\n        if (activeSubscription.gateway === 'paypal') {\n            this.paypalSubscriptions.changePlan(activeSubscription, plan).then(user => {\n                this.loading$.next(false);\n                this.currentUser.assignCurrent(user);\n                this.router.navigate(['/billing/subscription']);\n                this.toast.open('Subscription plan changed.');\n            });\n        } else {\n            this.subscriptions.changePlan(activeSubscription.id, plan)\n                .pipe(finalize(() => this.loading$.next(false)))\n                .subscribe(response => {\n                    this.currentUser.assignCurrent(response['user']);\n                    this.router.navigate(['/billing/subscription']);\n                    this.toast.open('Subscription plan changed.');\n                });\n        }\n    }\n\n    private getSelectedOrParentPlanName(): string {\n        const selectedPlan = this.state.selectedPlan$.value;\n        const plan = selectedPlan.parent ? selectedPlan.parent : selectedPlan;\n        return plan.name;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, Router} from '@angular/router';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {EMPTY, Observable, of} from 'rxjs';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {Plans} from '@common/shared/billing/plans.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BillingPlansResolver implements Resolve<Plan[]> {\n    constructor(\n        private plans: Plans,\n        private router: Router\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Plan[]> {\n        return this.plans.all({order: 'position|asc', perPage: 30})\n            .pipe(map(response => response.pagination.data))\n            .pipe(\n                catchError(() => {\n                    this.router.navigateByUrl('/');\n                    return EMPTY;\n                }),\n                mergeMap((plans: Plan[]) => {\n                    return of(plans);\n                })\n            );\n    }\n}\n\n","<div class=\"text\" trans>Accepted Payment Methods</div>\n<div class=\"card-icons\">\n    <img [src]=\"getCardIcon('paypal')\">\n    <img [src]=\"getCardIcon(card)\" *ngFor=\"let card of acceptedCards\">\n</div>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'accepted-payments-header',\n    templateUrl: './accepted-payments-header.component.html',\n    styleUrls: ['./accepted-payments-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcceptedPaymentsHeaderComponent implements OnInit {\n    public acceptedCards: string[] = [];\n\n    constructor(private settings: Settings, public el: ElementRef) {}\n\n    ngOnInit() {\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\n    }\n\n    public getCardIcon(card: string) {\n        return this.settings.getAssetUrl() + 'images/billing/' + card.toLowerCase() + '.png';\n    }\n}\n","<ul *ngIf=\"getPlan()\" [class.dense]=\"dense\">\n    <ng-container *ngIf=\"getPlan().show_permissions\">\n        <li *ngFor=\"let permission of getPlan().permissions\">\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\n            <span>{{permission.display_name || permission.name}}</span>\n        </li>\n    </ng-container>\n    <ng-container *ngIf=\"getPlan().features.length\">\n        <li *ngFor=\"let feature of getPlan().features\">\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\n            <span>{{feature}}</span>\n        </li>\n    </ng-container>\n</ul>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'plan-features-list',\n    templateUrl: './plan-features-list.component.html',\n    styleUrls: ['./plan-features-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlanFeaturesListComponent {\n    @Input() plan: Plan;\n    @Input() showCheckIcons = false;\n    @Input() dense = false;\n\n    public getPlan() {\n        return this.plan.parent || this.plan;\n    }\n}\n","<accepted-payments-header></accepted-payments-header>\n\n<ng-container *ngIf=\"plan\">\n    <div class=\"selected-plan\">\n        <div class=\"header\"><full-plan-name [plan]=\"plan\"></full-plan-name></div>\n        <plan-features-list class=\"plan-features-list\" [plan]=\"plan\" [showCheckIcons]=\"true\" [dense]=\"true\"></plan-features-list>\n    </div>\n\n    <div class=\"divider\"></div>\n\n    <div class=\"secure-shopping\">\n        <div class=\"icon-container\">\n            <mat-icon svgIcon=\"shield-custom\"></mat-icon>\n        </div>\n        <div class=\"text\">\n            <div class=\"primary\" trans>SSL Secure Payment</div>\n            <div class=\"secondary\" trans>Your information is protected by 256-bit SSL encryption</div>\n        </div>\n    </div>\n</ng-container>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'upgrade-page-aside',\n    templateUrl: './upgrade-page-aside.component.html',\n    styleUrls: ['./upgrade-page-aside.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpgradePageAsideComponent {\n    @Input() plan: Plan;\n}\n","<ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\n    <div class=\"line\">\n        <div class=\"summary-left\">\n            <full-plan-name [plan]=\"selectedPlan\"></full-plan-name>\n        </div>\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\n    </div>\n\n    <div class=\"line emphasis\">\n        <div class=\"summary-left\" trans>Total</div>\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\n    </div>\n</ng-container>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\n\n@Component({\n    selector: 'order-summary',\n    templateUrl: './order-summary.component.html',\n    styleUrls: ['./order-summary.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderSummaryComponent {\n    constructor(public state: SubscriptionStepperState) {}\n}\n","<form (ngSubmit)=\"submitForm()\" class=\"card-form many-inputs\" ngNativeValidate>\n    <div class=\"input-container\">\n        <label for=\"cardNumber\" trans>Credit or Debit Card</label>\n        <div id=\"cardNumber\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"cardExpiry\" trans>Card Expiration</label>\n        <div id=\"cardExpiry\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"cardCvc\" trans>CVC</label>\n        <div id=\"cardCvc\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"error margin-bottom\" role=\"alert\" *ngIf=\"error$ | async as error\">{{error}}</div>\n\n    <order-summary *ngIf=\"showOrderSummary\"></order-summary>\n\n    <button type=\"submit\" *ngIf=\"showSubmitButton\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">{{submitButtonText | trans}}</button>\n</form>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output\n} from '@angular/core';\nimport {finalize} from 'rxjs/operators';\nimport {User} from '../../core/types/models/User';\nimport {Settings} from '../../core/config/settings.service';\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\nimport {CurrentUser} from '../../auth/current-user';\nimport {Subscriptions} from '../../shared/billing/subscriptions.service';\nimport {Toast} from '../../core/ui/toast.service';\nimport {ThemeService} from '@common/core/theme.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\n\n@Component({\n    selector: 'credit-card-form',\n    templateUrl: './credit-card-form.component.html',\n    styleUrls: ['./credit-card-form.component.scss'],\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreditCardFormComponent implements OnDestroy, AfterViewInit {\n\n    /**\n     * Event fired when form is submitted and card is added successfully on active gateway.\n     */\n    @Output() created: EventEmitter<User> = new EventEmitter();\n\n    /**\n     * Display text for form submit button.\n     */\n    @Input() submitButtonText = 'Submit';\n\n    /**\n     * Whether form submit button should be shown.\n     */\n    @Input() showSubmitButton = true;\n\n    /**\n     * Whether order summary should be shown in the template.\n     */\n    @Input() showOrderSummary = false;\n\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public error$ = new BehaviorSubject<string>(null);\n    private stripeElements: stripe.elements.Element[] = [];\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private currentUser: CurrentUser,\n        private settings: Settings,\n        private zone: NgZone,\n        private lazyLoader: LazyLoaderService,\n        private toast: Toast,\n        private theme: ThemeService,\n        private state: SubscriptionStepperState,\n    ) {\n        this.resetForm();\n    }\n\n    ngAfterViewInit() {\n        this.initStripe();\n    }\n\n    ngOnDestroy() {\n        this.destroyStripe();\n    }\n\n    /**\n     * Submit stripe elements credit card form.\n     */\n    public async submitForm() {\n        // prevent all subscriptions on demo site.\n        if (this.settings.get('common.site.demo')) {\n            return this.toast.open('You can\\'t do that on demo site.');\n        }\n\n        this.loading$.next(true);\n\n        const {token, error} = await this.state.stripe.createToken(this.stripeElements[0]);\n\n        if (error) {\n            this.error$.next(error.message);\n            this.loading$.next(false);\n        } else {\n            this.addCardToUser(token);\n        }\n    }\n\n    public addCardToUser(stripeToken: stripe.Token) {\n        this.loading$.next(true);\n        this.subscriptions.addCard(stripeToken.id)\n            .pipe(finalize(() =>  this.loading$.next(false)))\n            .subscribe(response => {\n                this.resetForm();\n                this.currentUser.assignCurrent(response.user);\n                this.created.emit(response.user);\n            }, err => {\n                this.error$.next(err.messages.general);\n            });\n    }\n\n    /**\n     * Initiate stripe elements credit card form.\n     */\n    private initStripe() {\n        this.lazyLoader.loadAsset('https://js.stripe.com/v3', {type: 'js'}).then(() => {\n            const fields = ['cardNumber', 'cardExpiry', 'cardCvc'] as stripe.elements.elementsType[];\n            this.state.stripe = Stripe(this.settings.get('billing.stripe_public_key'));\n            const elements = this.state.stripe.elements();\n\n            const isDarkMode = this.theme.selectedTheme$.value.is_dark;\n            fields.forEach(field => {\n                const el = elements.create(field, {classes: {base: 'base'}, style: {base: {color: isDarkMode ? '#fff' : 'inherit'}}});\n                el.mount('#' + field);\n                el.on('change', this.onChange.bind(this));\n                this.stripeElements.push(el);\n            });\n        });\n    }\n\n    /**\n     * Destroy all stripe elements instances.\n     */\n    private destroyStripe() {\n        this.stripeElements.forEach(el => {\n            el.unmount();\n            el.destroy();\n        });\n    }\n\n    /**\n     * Fired on stripe element \"change\" event.\n     */\n    private onChange(change: stripe.elements.ElementChangeResponse) {\n        this.zone.run(() => {\n            this.error$.next(change.error ? change.error.message : null);\n        });\n    }\n\n    /**\n     * Reset credit card form.\n     */\n    private resetForm() {\n        this.error$.next(null);\n    }\n}\n","<mat-tab-group [dynamicHeight]=\"true\" color=\"accent\" [selectedIndex]=\"selectedIndex$ | async\">\n    <mat-tab [label]=\"'Bank Card' | trans\" *ngIf=\"settings.get('billing.stripe.enable')\">\n        <credit-card-form (created)=\"subscribeOnStripe()\" [submitButtonText]=\"submitText\" [showOrderSummary]=\"true\"></credit-card-form>\n    </mat-tab>\n    <mat-tab label=\"Paypal\" [disabled]=\"disablePaypalTab\" *ngIf=\"settings.get('billing.paypal.enable')\">\n        <div class=\"paypal-tab\">\n            <p class=\"info\" trans>After clicking the button below, you will be redirected to paypal.com to approve the subscription.</p>\n            <order-summary></order-summary>\n            <button mat-raised-button color=\"accent\" (click)=\"subscribeOnPaypal()\" [disabled]=\"loading$ | async\">{{submitText | trans}}</button>\n        </div>\n    </mat-tab>\n</mat-tab-group>\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Subscription} from '@common/shared/billing/models/subscription';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {CreateSubOnStripeResponse, Subscriptions} from '@common/shared/billing/subscriptions.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {PaypalSubscriptions} from '@common/billing/subscriptions/paypal-subscriptions';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {User} from '@common/core/types/models/User';\nimport {CreditCard} from '@common/billing/upgrade-page/upgrade-page.component';\nimport {BehaviorSubject} from 'rxjs';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\n\nexport interface SubscriptionCompletedEvent {\n    status: 'created'|'updated';\n}\n\ninterface NewSubscriptionPayload {\n    card?: CreditCard;\n    start_date?: string;\n    plan_id: number;\n}\n\n@Component({\n    selector: 'create-subscription-panel',\n    templateUrl: './create-subscription-panel.component.html',\n    styleUrls: ['./create-subscription-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreateSubscriptionPanelComponent {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public selectedIndex$ = new BehaviorSubject<number>(0);\n\n    /**\n     * Fired when subscription creation starts or ends.\n     */\n    @Output() loading = new EventEmitter<boolean>();\n\n    /**\n     * Text for submit purchase button.\n     */\n    @Input() submitText = 'Submit Purchase';\n\n    /**\n     * Whether paypal tab should be disabled.\n     */\n    @Input() disablePaypalTab = false;\n\n    /**\n     * We're changing user subscription from this one.\n     * Used for prorating the new subscription start date.\n     */\n    @Input() from: Subscription;\n\n    /**\n     * Plan user should be subscribed to.\n     */\n    @Input() plan: Plan;\n\n    /**\n     * Fired when subscription is created or updated.\n     */\n    @Output() completed: EventEmitter<SubscriptionCompletedEvent> = new EventEmitter();\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private currentUser: CurrentUser,\n        private paypal: PaypalSubscriptions,\n        private toast: Toast,\n        public settings: Settings,\n        private state: SubscriptionStepperState,\n    ) {}\n\n    /**\n     * Subscribe user to current plan on stripe gateway.\n     */\n    public subscribeOnStripe() {\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\n        if (this.currentUser.getSubscription({gateway: 'stripe', planId: this.plan.id})) {\n            return this.completed.emit({status: 'updated'});\n        }\n\n        this.startLoading();\n\n        this.subscriptions.createOnStripe(this.getNewSubscriptionPayload())\n            .subscribe(response => {\n                if (response.status === 'complete') {\n                    this.completeSubscription(response.user);\n                } else {\n                   this.confirmCardPayment(response);\n                }\n            }, err => {\n                const key = Object.keys(err.messages)[0];\n                this.toast.open(err.messages[key] || 'There was an issue. Please try again later.');\n                this.stopLoading();\n            });\n    }\n\n    /**\n     * Confirm card payment via 3D secure.\n     */\n    private confirmCardPayment(response: CreateSubOnStripeResponse) {\n        this.state.stripe.confirmCardPayment(response.payment_intent_secret)\n            .then(result => {\n                if (result.error) {\n                    this.stopLoading();\n                    this.toast.open('Card payment was not confirmed.', {action: 'Retry'})\n                        .onAction()\n                        .subscribe(() => {\n                            this.confirmCardPayment(response);\n                        });\n                } else {\n                    this.subscriptions.finalizeOnStripe(response.reference, response.user.id)\n                        .subscribe(finalResponse => {\n                            this.completeSubscription(finalResponse.user);\n                        });\n                }\n            });\n    }\n\n    /**\n     * Subscribe user to current plan on paypal gateway.\n     */\n    public subscribeOnPaypal() {\n        // prevent all subscriptions on demo site.\n        if (this.settings.get('common.site.demo')) {\n            return this.toast.open('You can\\'t do that on demo site.');\n        }\n\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\n        if (this.currentUser.getSubscription({gateway: 'paypal', planId: this.plan.id})) {\n            return this.completed.emit({status: 'updated'});\n        }\n\n        this.startLoading();\n\n        this.paypal.subscribe(this.getNewSubscriptionPayload()).then(user => {\n            this.completeSubscription(user);\n            this.selectedIndex$.next(0);\n        }).catch(message => {\n            this.stopLoading();\n            this.toast.open(message || 'There was an issue. Please try again later.');\n        });\n    }\n\n    /**\n     * Get payload for backend for creating a new subscription.\n     */\n    private getNewSubscriptionPayload(): NewSubscriptionPayload {\n       const payload = {plan_id: this.plan.id};\n\n       if (this.from) {\n           payload['start_date'] = this.from.renews_at;\n       }\n\n       return payload;\n    }\n\n    private completeSubscription(user: User) {\n        this.stopLoading();\n        this.currentUser.assignCurrent(user);\n        this.completed.emit({status: 'created'});\n    }\n\n    private startLoading() {\n        this.loading$.next(true);\n        this.loading.emit(true);\n    }\n\n    private stopLoading() {\n        this.loading$.next(false);\n        this.loading.emit(false);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"content container mat-elevation-z1\" *ngIf=\"activeSubscription$ | async as activeSubscription\">\n    <div class=\"main\">\n        <div class=\"main-section\">\n            <div class=\"main-section-title\"><full-plan-name [plan]=\"activeSubscription.plan\"></full-plan-name></div>\n            <div class=\"main-section-content\">\n                <ng-container *ngIf=\"canCancel()\">\n                    <p>\n                        {{ 'Your plan will automatically renew on' | trans }}\n                        <strong>{{getFormattedRenewDate() | formattedDate}}</strong>\n                        {{ \"and you'll be charged\" | trans }}\n                        <strong>{{activeSubscription.plan.amount | currency:activeSubscription.plan.currency}}</strong>.\n                    </p>\n\n                    <a mat-raised-button color=\"accent\" routerLink=\"/billing/upgrade\" trans>Change Plan</a>\n                </ng-container>\n\n                <ng-container *ngIf=\"canResume()\">\n                    <p>{{ 'You are on a grace period until' | trans }} <strong>{{getFormattedEndDate() | formattedDate}}</strong>. {{ 'Your subscription will not automatically resume and you will not be charged' | trans }}.</p>\n                    <p trans>You still have access to your plan's features until this date and you can resume your subscription anytime, by clicking button below.</p>\n                    <button mat-raised-button color=\"accent\" (click)=\"resumeSubscription()\" trans>Resume</button>\n                </ng-container>\n            </div>\n        </div>\n\n        <div class=\"main-section\" *ngIf=\"canCancel() && canChangePaymentMethod()\">\n            <div class=\"main-section-title\" trans>Payment Method</div>\n            <div class=\"main-title-description\" trans>Change your preferred payment method below. You can use a credit card or PayPal.</div>\n\n            <p>{{ 'Current payment Method' | trans }}: <strong>{{activeSubscription.gateway === 'paypal' ? 'PayPal' : ('Credit Card' | trans)}}</strong></p>\n\n            <div class=\"card-preview\" *ngIf=\"activeSubscription.gateway === 'stripe'\">\n                <div class=\"icon\"><mat-icon svgIcon=\"credit-card\"></mat-icon></div>\n                <div class=\"info\">{{currentUser.get('card_brand')}} **** {{currentUser.get('card_last_four')}}</div>\n            </div>\n\n            <create-subscription-panel\n                    (completed)=\"onPaymentMethodChange($event)\"\n                    (loading)=\"loading$.next($event)\"\n                    [plan]=\"getPlan()\"\n                    [from]=\"activeSubscription\"\n                    [disablePaypalTab]=\"activeSubscription.gateway === 'paypal'\"\n                    submitText=\"Change Payment Method\"\n            ></create-subscription-panel>\n        </div>\n\n        <div class=\"main-section\" *ngIf=\"canCancel()\">\n            <div class=\"main-section-title\" trans>Cancel Subscription</div>\n\n            <div class=\"main-section-content\">\n                <p trans>After cancelling subscription, you will have access to your active plan until your billing period end.</p>\n            </div>\n\n            <div class=\"main-section-actions\">\n                <button mat-raised-button color=\"warn\" (click)=\"maybeCancelSubscription()\" trans>Cancel</button>\n            </div>\n        </div>\n    </div>\n\n    <upgrade-page-aside [plan]=\"getPlan()\"></upgrade-page-aside>\n\n    <loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\n</div>\n\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { finalize, share } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Subscription } from '@common/shared/billing/models/subscription';\nimport { Settings } from '@common/core/config/settings.service';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { Subscriptions } from '@common/shared/billing/subscriptions.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport { SubscriptionCompletedEvent } from '@common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component';\nimport { User } from '@common/core/types/models/User';\n\n@Component({\n    selector: 'user-subscription-page',\n    templateUrl: './user-subscription-page.component.html',\n    styleUrls: ['./user-subscription-page.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserSubscriptionPageComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public activeSubscription$ = new BehaviorSubject<Subscription>(null);\n\n    constructor(\n        public settings: Settings,\n        private modal: Modal,\n        private subscriptions: Subscriptions,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n    ) {}\n\n    ngOnInit() {\n        this.activeSubscription$.next(this.currentUser.getSubscription());\n    }\n\n    public canResume() {\n        return this.currentUser.onGracePeriod();\n    }\n\n    public canCancel() {\n        return this.currentUser.isSubscribed() && !this.currentUser.onGracePeriod();\n    }\n\n    public canChangePaymentMethod() {\n        return this.settings.get('billing.stripe.enable') || this.settings.get('billing.paypal.enable');\n    }\n\n    public getFormattedEndDate(): string {\n        if ( ! this.activeSubscription$.value.ends_at) return null;\n        return this.activeSubscription$.value.ends_at.split(' ')[0];\n    }\n\n    public getFormattedRenewDate() {\n        if ( ! this.activeSubscription$.value.renews_at) return null;\n        return this.activeSubscription$.value.renews_at.split(' ')[0];\n    }\n\n    public getPlan(): Plan {\n        return this.activeSubscription$.value.plan;\n    }\n\n    /**\n     * Ask user to confirm deletion of selected templates\n     * and delete selected templates if user confirms.\n     */\n    public maybeCancelSubscription() {\n        this.modal.open(ConfirmModalComponent, {\n            title: 'Cancel Subscription',\n            body: 'Are you sure you want to cancel your subscription?',\n            ok: 'Yes, Cancel',\n            cancel: 'Go Back'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.cancelSubscription().subscribe(() => {\n                this.toast.open('Subscription cancelled.');\n            });\n        });\n    }\n\n    /**\n     * Resume cancelled subscription.\n     */\n    public resumeSubscription() {\n        this.loading$.next(true);\n        this.subscriptions.resume(this.activeSubscription$.value.id)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.currentUser.setSubscription(response.subscription);\n                this.activeSubscription$.next(this.currentUser.getSubscription());\n                this.toast.open('Subscription resumed.');\n            });\n    }\n\n    /**\n     * Called after user payment method for active subscription has been changed successfully.\n     */\n    public onPaymentMethodChange(e: SubscriptionCompletedEvent) {\n        // if we've only changed customer card information on same\n        // payment gateway, show success message and bail\n        if (e.status === 'updated') {\n            this.toast.open('Payment method updated.');\n            return;\n        }\n\n        this.loading$.next(true);\n\n        // otherwise cancel user's subscription on the other gateway\n        this.cancelSubscription({delete: true}).subscribe(() => {\n            this.toast.open('Payment method updated.');\n        });\n    }\n\n    /**\n     * Cancel currently active user subscription.\n     */\n    private cancelSubscription(params: {delete?: boolean} = {}): Observable<{user: User}> {\n        this.loading$.next(true);\n\n        const request = this.subscriptions.cancel(this.activeSubscription$.value.id, {delete: params.delete})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .pipe(share());\n\n        request.subscribe(response => {\n            // set new active subscription, if user had more then one\n            this.updateUserAndSubscription(response.user);\n        });\n\n        return request;\n    }\n\n    /**\n     * Update current user and active subscription.\n     */\n    private updateUserAndSubscription(user: User) {\n        this.currentUser.assignCurrent(user);\n        this.activeSubscription$.next(this.currentUser.getSubscription());\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserSubscribedGuard implements CanActivate, CanActivateChild {\n\n    constructor(private currentUser: CurrentUser, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if (this.currentUser.isSubscribed()) { return true; }\n\n        this.router.navigate(['/billing/upgrade']);\n\n        return false;\n    }\n}","import {Injectable} from '@angular/core';\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\nimport {map} from 'rxjs/operators';\nimport {ValueLists} from '../../core/services/value-lists.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CurrenciesListResolver implements Resolve<any> {\n    constructor(private valueLists: ValueLists) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\n        return this.valueLists.get(['currencies']).pipe(map(response => response.currencies)).toPromise();\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Invoice} from '@common/billing/invoices/invoice';\n\nconst BASE_URI = 'billing/invoice';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InvoiceService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: {userId?: number} = {}): BackendResponse<{invoices: Invoice[]}> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"container\">\n    <h1 trans>Your Payment History</h1>\n\n    <div class=\"material-panel\">\n        <mat-table [dataSource]=\"dataSource$ | async\" class=\"responsive-material-table\">\n            <ng-container matColumnDef=\"date\">\n                <mat-header-cell *matHeaderCellDef trans>Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Date:\">{{invoice.created_at | formattedDate}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"amount\">\n                <mat-header-cell *matHeaderCellDef trans>Amount</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Amount:\">{{invoice.subscription.plan.currency_symbol + invoice.subscription.plan.amount}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef trans>Status</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Status:\" trans>{{invoice.paid ? 'Paid' : 'Pending'}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"invoice\">\n                <mat-header-cell *matHeaderCellDef trans>Invoice</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Invoice:\">\n                    <a [href]=\"getInvoiceUrl(invoice)\" target=\"_blank\" trans>View</a>\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"['date', 'amount', 'status', 'invoice']\"></mat-header-row>\n            <mat-row *matRowDef=\"let myRowData; columns: ['date', 'amount', 'status', 'invoice']\"></mat-row>\n        </mat-table>\n\n        <no-results-message *ngIf=\"!(dataSource$ | async).length && !(loading$ | async)\">\n            <span primary-text trans>Nothing To Display.</span>\n            <span secondary-text trans>You do not have any invoices yet.</span>\n        </no-results-message>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '@common/billing/invoices/invoice.service';\nimport {Invoice} from '@common/billing/invoices/invoice';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'invoice-index',\n    templateUrl: './invoice-index.component.html',\n    styleUrls: ['./invoice-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InvoiceIndexComponent implements OnInit {\n    public dataSource$ = new BehaviorSubject<Invoice[]>([]);\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n       private invoices: InvoiceService,\n       public settings: Settings,\n       private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.invoices.index({userId: this.currentUser.get('id')})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.dataSource$.next(response.invoices);\n            });\n    }\n\n    public getInvoiceUrl(invoice: Invoice) {\n        return this.settings.getBaseUrl(true) + 'secure/billing/invoice/' + invoice.uuid;\n    }\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pricing-page',\n  templateUrl: './pricing-page.component.html',\n  styleUrls: ['./pricing-page.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PricingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\nimport {AppearanceListenerService} from '../../shared/appearance/appearance-listener.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RedirectToUpgradePage implements CanActivate {\n    constructor(\n        private currentUser: CurrentUser,\n        private router: Router,\n        private listener: AppearanceListenerService,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.listener.active) {\n            return true;\n        }\n        if (this.currentUser.isSubscribed()) {\n            this.router.navigate(['billing/subscription']);\n            return false;\n        } else if (this.currentUser.isLoggedIn()) {\n            this.router.navigate(['billing/upgrade']);\n            return false;\n        }\n        return true;\n    }\n}\n","import { Route, RouterModule } from '@angular/router';\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\nimport { NgModule } from '@angular/core';\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\nimport { AuthGuard } from '../guards/auth-guard.service';\nimport { BillingEnabledGuard } from '../shared/billing/guards/billing-enabled-guard.service';\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\nimport { CheckPermissionsGuard } from '@common/guards/check-permissions-guard.service';\nimport { PricingPageComponent } from '@common/billing/pricing-page/pricing-page.component';\nimport { RedirectToUpgradePage } from '@common/billing/guards/redirect-to-upgrade-page.service';\n\nexport const routes: Route[] = [\n    {\n        path: 'pricing',\n        component: PricingPageComponent,\n        data: {allowIfSubscriptionForced: true},\n        canActivate: [RedirectToUpgradePage],\n        resolve: {\n            plans: BillingPlansResolver,\n            currencies: CurrenciesListResolver\n        }\n    },\n    {\n        path: '',\n        canActivate: [AuthGuard, CheckPermissionsGuard],\n        canActivateChild: [CheckPermissionsGuard],\n        data: {allowIfSubscriptionForced: true},\n        children: [\n            {\n                path: 'upgrade',\n                component: UpgradePageComponent,\n                canActivate: [BillingEnabledGuard, AuthGuard],\n                resolve: {\n                    plans: BillingPlansResolver,\n                    currencies: CurrenciesListResolver\n                }\n            },\n            {\n                path: 'subscription',\n                component: UserSubscriptionPageComponent,\n                resolve: { plans: BillingPlansResolver },\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\n                data: { name: 'subscription' }\n            },\n            {\n                path: 'invoices',\n                component: InvoiceIndexComponent,\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\n            },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BillingRoutingModule {}\n","<upgrade-page mode=\"pricing\"></upgrade-page>","<div class=\"plans\" [class.has-recommended]=\"hasRecommendedPlan\">\n    <div class=\"plan\" *ngFor=\"let plan of getAllPlans(); last as last; first as first\" [class.recommended]=\"plan.recommended\" [class.last]=\"last\" [class.first]=\"first\">\n        <div class=\"name\">{{plan.name}}</div>\n        <div class=\"price-box\" *ngIf=\"!plan.free\">\n            <span class=\"number\">{{plan.amount | currency:plan.currency}}</span>\n            <span class=\"interval\"> / {{plan.interval | trans}}</span>\n        </div>\n        <div class=\"price-box\" *ngIf=\"plan.free\" trans>Free</div>\n        <plan-features-list [plan]=\"plan\"></plan-features-list>\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-raised-button *ngIf=\"plan.recommended\" [disabled]=\"plan.free || userSubscribedToPlan(plan)\" color=\"accent\">\n            {{ (userSubscribedToPlan(plan) ? 'Your Current Plan' : 'Choose Plan') | trans }}\n        </button>\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-stroked-button color=\"accent\" *ngIf=\"!plan.recommended\" [disabled]=\"plan.free || userSubscribedToPlan(plan)\">\n            {{ (userSubscribedToPlan(plan) ? 'Your Current Plan' : 'Choose Plan') | trans }}\n        </button>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {SubscriptionStepperState} from '../../subscriptions/subscription-stepper-state.service';\nimport {Plan} from '@common/core/types/models/Plan';\nimport { CurrentUser } from '@common/auth/current-user';\n\n@Component({\n    selector: 'select-plan-panel',\n    templateUrl: './select-plan-panel.component.html',\n    styleUrls: ['./select-plan-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectPlanPanelComponent implements OnInit {\n    public hasRecommendedPlan = false;\n    @Output() selected = new EventEmitter();\n\n    constructor(\n        public state: SubscriptionStepperState,\n        public currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.hasRecommendedPlan = this.state.plans.filter(plan => plan.recommended).length > 0;\n    }\n\n    public selectPlan(plan: Plan) {\n        this.state.selectInitialPlan(plan);\n        // fire event on next render to avoid race conditions\n        setTimeout(() => this.selected.emit(plan));\n    }\n\n    public getAllPlans() {\n        return this.state.plans.filter(plan => !plan.parent_id && !plan.hidden);\n    }\n\n    public userSubscribedToPlan(plan: Plan): boolean {\n        return !!this.currentUser.getSubscription({planId: plan.id});\n    }\n}\n","<div class=\"subscription-period-step step-container\" *ngIf=\"state.initialPlan$ | async as initialPlan\">\n    <div class=\"left-col\">\n        <div class=\"title\" trans>Select the duration of your plan. Longer plans offer better discounts!</div>\n        <mat-radio-group class=\"periods\" [(ngModel)]=\"state.radioGroupModel\" (change)=\"state.selectPlanById(state.radioGroupModel)\">\n            <div class=\"radio-button-wrapper no-label\">\n                <mat-radio-button [value]=\"initialPlan.id\" class=\"period\" color=\"accent\">\n                    <div class=\"radio-button-content\">\n                        <div class=\"name\">1 {{initialPlan.interval | trans}} {{ 'subscription' | trans }}:</div>\n                        <div class=\"price\">{{initialPlan.amount | currency:initialPlan.currency}}/{{initialPlan.interval | trans}}</div>\n                    </div>\n                </mat-radio-button>\n            </div>\n            <div class=\"radio-button-wrapper\" *ngFor=\"let plan of state.getChildPlans(initialPlan)\">\n                <ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\n                    <div class=\"savings-label\">{{'Save' | trans}} {{getPlanSavings(selectedPlan.parent || selectedPlan, plan)}}%</div>\n                </ng-container>\n                <mat-radio-button [value]=\"plan.id\" class=\"period\" color=\"accent\">\n                    <div class=\"radio-button-content\">\n                        <div class=\"name\">{{plan.name | trans}}:</div>\n                        <div class=\"price\">{{getPlanPerMonthAmount(plan) | currency:plan.currency}}/{{initialPlan.interval | trans}}</div>\n                    </div>\n                </mat-radio-button>\n            </div>\n        </mat-radio-group>\n\n        <div class=\"actions\">\n            <button mat-button matStepperPrevious trans>Back</button>\n            <button mat-raised-button color=\"accent\" (click)=\"selected.emit()\">\n                {{ (state.mode === 'changePlan' ? 'Change Plan' : 'Select') | trans }}\n            </button>\n        </div>\n    </div>\n\n    <upgrade-page-aside *ngIf=\"showSidebar\" [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SubscriptionStepperState } from '../../subscriptions/subscription-stepper-state.service';\nimport { Plan } from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'select-plan-period-panel',\n    templateUrl: './select-plan-period-panel.component.html',\n    styleUrls: ['./select-plan-period-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectPlanPeriodPanelComponent {\n    @Input() showSidebar = false;\n    @Output() selected = new EventEmitter();\n\n    constructor(\n        public state: SubscriptionStepperState,\n    ) {}\n\n    public getPlanSavings(base: Plan, parent: Plan): number {\n        const amount = this.getPlanPerMonthAmount(parent);\n        const savings = (base.amount - amount) / base.amount * 100;\n        return Math.ceil(savings);\n    }\n\n    public getPlanPerMonthAmount(plan: Plan) {\n        return plan.amount / plan.interval_count;\n    }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n@Component({\n    selector: 'contact-widget',\n    templateUrl: './contact-widget.component.html',\n    styleUrls: ['./contact-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactWidgetComponent {}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserNotSubscribedGuard implements CanActivate, CanActivateChild {\n\n    constructor(private currentUser: CurrentUser, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if ( ! this.currentUser.isSubscribed()) { return true; }\n\n        this.router.navigate(['/billing/subscription']);\n\n        return false;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\nimport { BillingRoutingModule } from './billing-routing.module';\nimport { PlanFeaturesListComponent } from './upgrade-page/plan-features-list/plan-features-list.component';\nimport { OrderSummaryComponent } from './upgrade-page/order-summary/order-summary.component';\nimport { AcceptedPaymentsHeaderComponent } from './upgrade-page/accepted-payments-header/accepted-payments-header.component';\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\nimport { UpgradePageAsideComponent } from './upgrade-page/upgrade-page-aside/upgrade-page-aside.component';\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\nimport { CreditCardFormComponent } from './credit-card-form/credit-card-form.component';\nimport { PaypalSubscriptions } from './subscriptions/paypal-subscriptions';\nimport { SelectPlanPanelComponent } from './plans/select-plan-panel/select-plan-panel.component';\nimport { SelectPlanPeriodPanelComponent } from './plans/select-plan-period-panel/select-plan-period-panel.component';\nimport { SubscriptionStepperState } from './subscriptions/subscription-stepper-state.service';\nimport { UserNotSubscribedGuard } from './guards/user-not-subscribed-guard.service';\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\nimport { CreateSubscriptionPanelComponent } from './subscriptions/create-subscription-panel/create-subscription-panel.component';\nimport { ContactWidgetComponent } from './upgrade-page/contact-widget/contact-widget.component';\nimport { FullPlanNameModule } from '../shared/billing/full-plan-name/full-plan-name.module';\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PricingPageComponent } from './pricing-page/pricing-page.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialNavbarModule,\n        BillingRoutingModule,\n        FullPlanNameModule,\n        TranslationsModule,\n        FormatPipesModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatSnackBarModule,\n        MatCheckboxModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatRadioModule,\n        MatTableModule,\n    ],\n    declarations: [\n        UpgradePageComponent,\n        PlanFeaturesListComponent,\n        OrderSummaryComponent,\n        AcceptedPaymentsHeaderComponent,\n        UserSubscriptionPageComponent,\n        UpgradePageAsideComponent,\n        CreditCardFormComponent,\n        CreateSubscriptionPanelComponent,\n        SelectPlanPanelComponent,\n        SelectPlanPeriodPanelComponent,\n        ContactWidgetComponent,\n        InvoiceIndexComponent,\n        PricingPageComponent,\n    ],\n    providers: [\n        BillingPlansResolver,\n        CurrenciesListResolver,\n        PaypalSubscriptions,\n        SubscriptionStepperState,\n        SubscriptionStepperState,\n        UserNotSubscribedGuard,\n        UserSubscribedGuard,\n    ],\n    exports: [\n        BillingRoutingModule,\n    ]\n})\nexport class BillingModule {\n}\n","<mat-icon svgIcon=\"question-answer\" class=\"icon\"></mat-icon>\n\n<div class=\"title\" trans>Do you have any questions about PRO accounts?</div>\n<div class=\"subtitle\" trans>Our support team will be happy to assist you.</div>\n<a mat-raised-button color=\"accent\" target=\"_blank\" routerLink=\"/contact\" trans>Contact Us</a>","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, ContentChildren, Input, Optional, ElementRef, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatRadioDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatRadioDefaultOptions.prototype.color;\n}\n/** @type {?} */\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatRadioGroup)),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nclass MatRadioChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatRadioButton that emits the change event.\n     * @type {?}\n     */\n    MatRadioChange.prototype.source;\n    /**\n     * The value of the MatRadioButton.\n     * @type {?}\n     */\n    MatRadioChange.prototype.value;\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /**\n     * @param {?} _changeDetector\n     */\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Name of the radio button group. All radio buttons inside this group will use this name.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * Whether the radio group is disabled\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Whether the radio group is required\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => radio._markForCheck()));\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return new (t || MatRadioGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR])] });\n/** @nocollapse */\nMatRadioGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nMatRadioGroup.propDecorators = {\n    change: [{ type: Output }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatRadioButton)), { descendants: true },] }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatRadioButton)), { descendants: true }]\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_required;\n    /**\n     * Selected value for the radio group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._value;\n    /**\n     * The HTML name attribute applied to radio buttons in this group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._name;\n    /**\n     * The currently selected radio button. Should match value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._selected;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._isInitialized;\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._labelPosition;\n    /**\n     * Whether the radio group is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._disabled;\n    /**\n     * Whether the radio group is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._required;\n    /**\n     * The method to be called in order to update ngModel\n     * @type {?}\n     */\n    MatRadioGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * \\@docs-private\n     * @type {?}\n     */\n    MatRadioGroup.prototype.onTouched;\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioGroup.prototype.change;\n    /**\n     * Child radio buttons.\n     * @type {?}\n     */\n    MatRadioGroup.prototype._radios;\n    /**\n     * Theme color for all of the radio buttons in the group.\n     * @type {?}\n     */\n    MatRadioGroup.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nclass MatRadioButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatRadioButtonBase.prototype.disabled;\n    /** @type {?} */\n    MatRadioButtonBase.prototype._elementRef;\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    /**\n     * @param {?} radioGroup\n     * @param {?} elementRef\n     * @param {?} _changeDetector\n     * @param {?} _focusMonitor\n     * @param {?} _radioDispatcher\n     * @param {?=} _animationMode\n     * @param {?=} _providerOverride\n     */\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /**\n         * The unique ID for the radio button.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            (id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * Whether this radio button is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * The value of this radio button.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /**\n     * Whether the label should appear after or before the radio button. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /**\n     * Whether the radio button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /**\n     * Whether the radio button is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Theme color of the radio button.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * ID of the native input element inside `<mat-radio-button>`\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Focuses the radio button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /**\n     * Sets the disabled state and marks for check if a change occurred.\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(MatRadioGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_checked;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_required;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._uniqueId;\n    /**\n     * The unique ID for the radio button.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.id;\n    /**\n     * Analog to HTML 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.name;\n    /**\n     * Used to set the 'aria-label' attribute on the underlying input element.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaLabel;\n    /**\n     * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaLabelledby;\n    /**\n     * The 'aria-describedby' attribute is read after the element's label and field type.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._labelPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._color;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.change;\n    /**\n     * The parent radio group. May or may not be present.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.radioGroup;\n    /**\n     * Whether this radio is checked.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._checked;\n    /**\n     * Whether this radio is disabled.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._disabled;\n    /**\n     * Whether this radio is required.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._required;\n    /**\n     * Value assigned to this radio.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._value;\n    /**\n     * Unregister function for _radioDispatcher\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._removeUniqueSelectionListener;\n    /**\n     * The native `<input type=radio>` element\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatRadioButtonBase.prototype._changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._radioDispatcher;\n    /** @type {?} */\n    _MatRadioButtonBase.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._providerOverride;\n}\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return ɵMatRadioButton_BaseFactory(t || MatRadioButton); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatRadioButton_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioButton);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup,\n        MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup,\n        MatRadioButton,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase };\n\n//# sourceMappingURL=radio.js.map","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '../../core/http/app-http-client.service';\nimport { PaginatedBackendResponse } from '../../core/types/pagination/paginated-backend-response';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\n\nexport const PLANS_BASE_URI = 'billing-plan';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Plans {\n    constructor(private http: AppHttpClient) {}\n\n    public all(params?: PaginationParams): PaginatedBackendResponse<Plan> {\n        return this.http.get(PLANS_BASE_URI, params);\n    }\n\n    public get(id: number): BackendResponse<{plan: Plan}> {\n        return this.http.get(`${PLANS_BASE_URI}/${id}`);\n    }\n\n    public create(params: object): BackendResponse<{plan: Plan}> {\n        return this.http.post(PLANS_BASE_URI, params);\n    }\n\n    public update(id: number, params: object): BackendResponse<{plan: Plan}> {\n        return this.http.put(`${PLANS_BASE_URI}/${id}`, params);\n    }\n\n    public delete(params: {ids: number[]}): BackendResponse<void> {\n        return this.http.delete(`${PLANS_BASE_URI}/${params.ids}`);\n    }\n\n    public sync(): BackendResponse<void> {\n        return this.http.post(`${PLANS_BASE_URI}/sync`);\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LocalStorage {\n    private readonly storage;\n\n    constructor() {\n        if (this.localStorageAvailable()) {\n            this.storage = localStorage;\n        } else {\n            this.storage = null;\n        }\n    }\n\n    /**\n     * Retrieve specified item from local storage.\n     */\n    public get<T>(key: string, defaultValue?: T): any|T {\n        if ( ! this.storage) return defaultValue;\n\n        let value;\n        try {\n            value = JSON.parse(this.storage.getItem(key));\n        } catch (e) {\n            //\n        }\n\n        return value == null ? defaultValue : value;\n    }\n\n    /**\n     * Store specified item in local storage.\n     */\n    public set(key: string, value: any) {\n        if ( ! this.storage) return null;\n        value = JSON.stringify(value);\n        this.storage.setItem(key, value);\n    }\n\n    /**\n     * Remove specified item from local storage.\n     */\n    public remove(key: string) {\n        if ( ! this.storage) return null;\n        this.storage.removeItem(key);\n    }\n\n    /**\n     * Check if local storage is available.\n     */\n    public localStorageAvailable(): boolean {\n        const test = 'test';\n\n        try {\n            localStorage.setItem(test, test);\n            localStorage.removeItem(test);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FullPlanNameComponent} from './full-plan-name.component';\n\n@NgModule({\n    declarations: [\n        FullPlanNameComponent,\n    ],\n    exports: [\n        FullPlanNameComponent,\n    ]\n})\nexport class FullPlanNameModule {}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\nimport {PaginationResponse} from '../../core/types/pagination/pagination-response';\nimport {User} from '../../core/types/models/User';\nimport {Subscription} from '@common/shared/billing/models/subscription';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {BackendResponse} from '@common/core/types/backend-response';\n\nexport interface CreateSubOnStripeResponse {\n    status: 'complete'|'requires_action';\n    user?: User;\n    payment_intent_secret: string|undefined;\n    reference: string;\n    end_date: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Subscriptions {\n\n    /**\n     * Subscriptions constructor.\n     */\n    constructor(private http: AppHttpClient) {}\n\n    /**\n     * Get all available subscriptions.\n     */\n    public all(params?: object): Observable<PaginationResponse<Subscription>> {\n        return this.http.get('billing/subscriptions', params);\n    }\n\n    /**\n     * Get subscription matching specified id.\n     */\n    public get(id: number): Observable<{subscription: Subscription}> {\n        return this.http.get('billing/subscriptions/' + id);\n    }\n\n    /**\n     * Create a new subscription on stripe.\n     */\n    public createOnStripe(params: {plan_id: number, start_date?: string}): Observable<CreateSubOnStripeResponse> {\n        return this.http.post('billing/subscriptions/stripe', params);\n    }\n\n    /**\n     * Update subscription matching specified id.\n     */\n    public update(id: number, params: object): Observable<{subscription: Subscription}> {\n        return this.http.put('billing/subscriptions/' + id, params);\n    }\n\n    /**\n     * Create a new subscription.\n     */\n    public create(params: object): Observable<{subscription: Subscription}> {\n        return this.http.post('billing/subscriptions', params);\n    }\n\n    /**\n     * Cancel subscription matching specified id.\n     */\n    public cancel(id: number, params: {delete: boolean}): Observable<{user: User}> {\n        return this.http.delete('billing/subscriptions/' + id, params);\n    }\n\n    public resume(id: number): Observable<{subscription: Subscription}> {\n        return this.http.post('billing/subscriptions/' + id + '/resume');\n    }\n\n    public changePlan(id: number, plan: Plan): Observable<{user: User}|{links: {approve: string}}> {\n        return this.http.post('billing/subscriptions/' + id + '/change-plan', {newPlanId: plan.id});\n    }\n\n    public addCard(token: string): Observable<{user: User}> {\n        return this.http.post('billing/stripe/cards/add', {token});\n    }\n\n    public finalizeOnStripe(reference: string, userId: number): BackendResponse<CreateSubOnStripeResponse> {\n        return this.http.post('billing/subscriptions/stripe/finalize', {reference, userId});\n    }\n}\n"]}